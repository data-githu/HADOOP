■ 하둡이란 무엇인가?
*하둡(hadoop) ?
대용량 데이터를 분산 처리할 수 있는 자바 기반의 오픈소스 프레임워크


*빅데이터 기사시험책에 나온 정의?
대용량 데이터를 분산 처리할 수 있는 자바 기반의 오픈 소스 프레임워크로서, 하둡은 분산 파일 시스템인 HDFS(Hadoop Distributed File System)에 데이터를 저장하고, 분산처리시스템인 맵리듀스를 이용해 데이터를 처리한다.



*데이터의 종류 ?  
1. 정형화된 데이터  
:  emp 와 컬럼과 row 로 이루어진 rdbms 에 저장되는 테이블 형태의 데이터 
2. 반정형화된 데이터
:  웹로그와 sns 데이터, html, json
3. 비정형화된 데이터 
:  동영상이나 이미지 데이터 , 텍스트 데이터 

    RDBMS                 vs           비 rdbms 제품 

    Oracle                                하둡 (무료)
    mssql                                 스칼라 
    mysql
    maria db (무료)
    PostgreSQL                        


*현업에서 데이터 분석가들이 하둡을 어떻게 활용하는가 ?
	1) 라이나 생명  데이터 분석가

 1. 하둡에 고객 데이터(정형화 된 데이터)를 저장하고 나이대 별로 분리해서 csv 파일을 생성합니다.
 2. 나이대별로 분리한 csv 파일 데이터를 가지고 군집분석
 3. 나이대별로 분리한 csv 파일 데이터를 가지고 연관분석 

	2) 아프리카 tv 데이터 분석가

 1. 채팅 데이터를 다 하둡에 저장한다.
 2. 특정 단어를 자주 사용하는 채팅방의 형태를 분석한다.
 3. 머신러닝을 사용해서 가공한 채팅 데이터를 학습시키고 특정 단어를 사용하는 사람은 불건전 대화를 이끌 가능성이 높다는것을 미리 예측을 하고 채팅방을 폐쇄시킨다.


* 하둡이 나온 배경지식 ?
구글에서 구글에 쌓여지는 수많은 빅데이터들을 구글에서도 처음에 RDBMS(오라클) 에 입력하고 데이터를 저장하려고 시도를 했으나 너무 데이터가 많아서 실패를 하고 자체적으로 빅데이터를 저장할 기술을 개발을 했습니다. 그리고 대외적으로 이 기술에 대한 논문을 하나 발표했다.

 웹페이지의 글들을 오라클에 입력하려면 테이블에 입력할 수 있는 insert 문장으로 만들어서 입력을 해야하는데 그렇게 만들 수 가 없어서 다른 기술을 개발했다.

그 논문을 더그커팅(하둡을 만든이)이라는 분이 읽고 자바로 구현했다. 하둡은 자바로 만들어졌다. 자바를 몰라도 하둡의 데이터를 쉽게 다룰 수  있도록 NoSQL 을 제공해서 SQL 과 같은 언어로 쉽게 빅데이터를 다룰 수 있게 되었다.----> Hive (벌떼)



*NoSQL ?   (Not  Only SQL)
NoSQL 은 전통적인 RDBMS와 다른 DBMS 를 지칭하기 위한 용어입니다.
자바를 몰라도 하둡에 저장된 데이터를 검색하고 다룰수 있는 언어 

  예: 
1. Hive  --> SQL 과 똑같다.  
2. Pig    ---> SQL 과 다름
3. Mongo db  --> SQL 과 다름 

     OLTP  서버          vs        DW 서버  (Data Warehouse)
     Oracle 
                                        Oracle, 하둡, mySQL, Maria db, 스칼라

                                          부서: DW 부서 , DATA MART
                                                   ↓
                                   DBA,          DW 개발자,       데이터 분석가
                                     ↓                  ↓                           
                  database 관리자   SQL과 PLSQL 을 사용해서 데이터에서 정보를 얻어내는 역할
                                                
   

더그커팅이라는 분이 구글의 논문을 보고 하둡을 구현한 다음에 이름을 뭐라고 할까 고민하다가 더그커팅의 애기가 노란 코끼리 장난감을 가지고 놀면서 hadoop 이라고 하는 것을 듣고 hadoop 이라고 이름을 지었다.

그래서 그 뒤로 hadoop 을 편하게 이용할 수 있도록 개발한 모든 하둡 생태계의 개발 프로그램 이름들이 다 동물이름으로 지어지게 되었다. Hadoop -----------------------------> Hive (벌떼)
                                                                  Pig (돼지)
                                                                  Mongo db
                                                                  Tajo (타조)

*하둡의 장점?
	1. 무료
	2. 분산 처리가 가능

여러대의 노드(컴퓨터)를 묶어서 마치 하나의 서버처럼 보이게 하고 여러 노드의 자원을 이용해서 데이터를 처리하기 때문에 처리하는 속도가 아주 빠른 장점이 있다.

예 :  우리반 컴퓨터(한대의 메모리가 8기가) 30대를 묶어서 분산 처리 파일 시스템을 구성했으면 마치 30대의 컴퓨터를 하나의 컴퓨터처럼 보이게 할 수 있습니다.
(240기가의 메모리를 사용할 수 있게 되고 30개의 CPU를 다 사용할 수 있게 됩니다.)
-> 이것을 지원하는 것이 바로 하둡입니다.

예 : 한대의 서버로 1테라 바이트의 데이터를 처리하는데 걸리는 시간이 2시간 반이 걸린다고 하면 하둡으로 여러대의 서버를 병렬로 묶어서 작업하면 2분 내에 데이터를 읽을 수 있습니다.

예 : 2008년 뉴욕타임즈는 130년 분량의 신문기사를 1100만 페이지를 하둡을 이용해서 하루만에 pdf 로 변환을 했습니다. 이때 든 비용은 200만원 밖에 안들었습니다. 만약 하둡이 아닌 일반 서버로 처리했다면 14년이 걸렸을 것으로 예상했습니다.

*하둡 생태계 시스템
빅데이터 분석      R, Python 등을 이용해서 분석
빅데이터 저장      Hbase  MongoDB  Cassandra CouchDb
분산 처리 지원     Hive Pig Sqoop Zookeeper
분산 배치 처리     하둡(hadoop) - MapReduce
분산 파일 관리     하둡(hadoop) - HDFS

 *하이브(Hive) 사용의 예
hive > select count(*) from emp;
-> java 로 자동 변환해서 결과를 출력해준다.

야후의 경우 약 5만대의 서버를 연결해서 하둡을 운영하고 있고 페이스북은 약 1만대 이상의 하둡 클러스터를 이용하고 있다.

	- 하둡의 장점 : 저렴한 구축비용과 비용대비 빠른 데이터 처리
	- 하둡의 단점 
	1) 무료다 보니 유지보수가 어렵다.
	2) 네임노드가 다운되면 고가용성이 지원이 되지 않는다.
	3) 한번 저장된 파일은 수정할 수 없다.
	4) 기존 데이터에 append 는 되는데 update가 안된다.
	(emp.csv 의 내용을 update 문으로 update 할 수 없다. )

 * 하둡의 주요 배포판
리눅스도 centos, redhat, ubunt 가 있는것처럼 하둡도 배포판이 있습니다.
	1) Cloudera 업체에서 나온 CDH  <---- 가장 높은 신뢰 
	2) Hortonworks 에서 나온 HDP
	3) 아마존에서 나온 EMR(Elastic Mapreduce)
	4) Hstreaming 에서 나온 Hsteraming 

*하둡 홈페이지
http://hadoop.apache.org

*하둡 설치의 큰 그림
	1) java 설치
	: 하둡이 자바로 만들어져 있어서 자바를 설치해야 합니다.
	2) keygen 생성 
	: 여러 노드들을 묶어서 마치 하나의 컴퓨터처럼 보이게 하는게 하둡의 목표이므로 다른 컴퓨터로 접속할 때 패스워드를 물어보지 않아도 접속될 수 있게 해야해서 keygen 을 생성해야합니다. 
	3) 하둡 설치
	: 하둡 설치는 아주 간단한데 그냥 4개의 파일의 내용만 수정하면 끝입니다. 

