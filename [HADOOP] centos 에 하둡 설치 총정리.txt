■ centos 에 하둡 설치 총정리 
항상 접속할 때는 scott 으로 접속하고 root 에서 작업할 때는 
scott 으로 접속한 상태에서 터미널 창에서 su - 로 유저 스위치하여 작업합니다. 


1. 하둡을 설치하기 위해서 필요한 파일
아래의 설치 파일을 공유폴더인 c 드라이브 밑에 data 밑에 둡니다. 
	1) jdk-7u60-linux-i586.gz
	2) hadoop-1.2.1.tar.gz
	3) protobuf-2.5.0.tar.gz

위의 3개의 파일을 바탕화면에 home 폴더에 카피 합니다. 

문제207. 위의 3개의 파일을 공유폴더에서 복사하여 /home/scott 밑에 붙여넣으시오
$ cd /media/sf_data 
$ cp jdk-7u60-linux-i586.gz /home/scott/
$ cp hadoop-1.2.1.tar.gz /home/scott/
$ cp protobuf-2.5.0.tar.gz /home/scott/
$ cd
$ ls -rlt 


2. 네트워크 설정을 변경합니다.
먼저 인터넷이 가능한 상태로  설정합니다. 
리눅스의 시작 버튼을 누르고 system tools 에 settings 에 network 에서 첫번째 인터넷을 켭니다. 그리고 firefox 를 열어서 네이버에 접속해봅니다.

## network 설정
[scott@localhost ~]$ su - 

# 리눅스 서버의 아이피주소를 확인하는 명령어인 ifconfig 를 수행합니다. 
root@localhost ~]# ifconfig   
enp0s3: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 10.0.2.15  netmask 255.255.255.0  broadcast 10.0.2.255
        inet6 fe80::20a7:28a4:994b:a4e1  prefixlen 64  scopeid 0x20<link>
        ether 08:00:27:06:33:51  txqueuelen 1000  (Ethernet)
        RX packets 40  bytes 7432 (7.2 KiB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 65  bytes 7731 (7.5 KiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

enp0s8: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        ether 08:00:27:f5:59:3d  txqueuelen 1000  (Ethernet)
        RX packets 7  bytes 795 (795.0 B)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 0  bytes 0 (0.0 B)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

이하 생략 ....


* 리눅스의 네트워크 설정 부분의 스크립트들이 모아져 있는곳으로 이동합니다.
[root@localhost ~]# cd /etc/sysconfig/network-scripts
[root@localhost ~]# ls
설명:  
ifcfg-enp0s3 은  인터넷 연결을 위한 네트워크
ifcfg-enp0s8 은  다른 서버가 내 서버에 접속을 하기 위해 ip주소를 셋팅하는 네트워크

# ifcfg-enp0s3 수정
[root@localhost network-scripts]# vi ifcfg-enp0s3

ONBOOT=yes

# ifcfg-enp0s8 수정
[root@localhost  network-scripts]# vi ifcfg-enp0s8

ONBOOT=yes
NM_CONTROLLED=yes
BOOTPROTO=none
NETMASK=255.255.255.0
IPADDR=192.168.56.101

설명: 192.168.56.101 은 다른 컴퓨터에서 내 리눅스 컴퓨터로 접속할 때 사용하는 ip 주소 입니다. 


3. hostname 을 변경합니다.( hostname 은 컴퓨터 이름) 
# hostname 설정
설명: 위에서 설정한  아이피 주소와 함께 hostname 을 centos 로 하겠다고 지정합니다. 

[root@localhost network-scripts]# vi /etc/hosts
192.168.56.101 centos

# hostname 변경(세션을 다시 시작하면 변경 정보 인식)
[root@localhost network-scripts]# hostname
localhost.localdomain

[root@localhost network-scripts]# hostnamectl set-hostname centos
 
* 네트워크 서비스를 재시작 합니다. 

설명: 네트워크 구성을 변경했으므로 변경된 내용을 반영하려면 다시 네트워크를 재시작 해야합니다. 

[root@localhost network-scripts]# service network restart
[root@localhost network-scripts]# ifconfig  


4. 방화벽을 해지 합니다.
## 방화벽 해지
[root@centos Desktop]# iptables -F
[root@centos Desktop]# iptables -L
Chain INPUT (policy ACCEPT)
target     prot opt source               destination         

Chain FORWARD (policy ACCEPT)
target     prot opt source               destination         

Chain OUTPUT (policy ACCEPT)
target     prot opt source               destination         


5. 시스템을 rebooting 합니다. 
[root@localhost ~]#  reboot 


6.  ld-linux.so.2 를 설치 합니다. 
설명:  
ld-linux.so.2 를 설치해야하는 이유는 java 를 설치할때 필요한 파일이기 때문입니다.
ld-linux.so.2 설치파일은 따로 필요없고 이미 리눅스 서버에 내장되어 있어서 불러와서 설치하면 됩니다.  

[scott@centos ~]$  su - 
[root@centos ~]#  yum install ld-linux.so.2 
[root@centos ~]#  reboot

리부팅하고 putty 에서 restart  session 하고 scott 으로 접속한다. 

7.  자바를 설치 합니다.                             
설명: 자바를 설치해야하는 이유는 하둡을 자바로 만들었기 때문입니다.

[scott@centos ~]$  java -version
openjdk version "1.8.0_262"
OpenJDK Runtime Environment (build 1.8.0_262-b10)
OpenJDK 64-Bit Server VM (build 25.262-b10, mixed mode)

반드시 root 로 접속하고 

[scott@centos ~]$  su -

설명:  자바를 설치할 디렉토리를 만들고 그곳에  jdk 파일의 압축을 풀면 자바설치 끝입니다.

[root@centos ~]#  mkdir -p /u01/app/java

설명: 위의 디렉토리에 jdk 파일을 mv 로 이동해놓습니다. 
[root@centos ~]# mv /home/scott/jdk-7u60-linux-i586.gz /u01/app/java/
[root@centos ~]#  cd /u01/app/java/
[root@centos java]# tar xvzf jdk-7u60-linux-i586.gz
...
jdk1.7.0_60/bin/jrunscript
jdk1.7.0_60/release
jdk1.7.0_60/THIRDPARTYLICENSEREADME-JAVAFX.txt
jdk1.7.0_60/COPYRIGHT

설명:  압축을 풀면 jdk1.7.0_60 이라는 디렉토리가 생기는데 이 디렉토리의 소유자 root 유져로 변경합니다. 

[root@centos java]# chown -R root:root jdk1.7.0_60
[root@centos java]# exit

설명: .bashrc 파일은 리눅스 환경설정 파일입니다.  이 파일에 적어준 내용대로 환경설정이 이뤄지는데 scott 으로 로그인을 할 때마다  .bashrc 파일이 자동으로 수행이 되어집니다.  아래의 작업은 .bashrc 파일에 자바가 이 시스템에서 어디에 설치되어있다라는 위치를 알려주는 작업입니다.  vi 편집기 명령어로 .bashrc 파일을 열고 아래의 3줄을 맨아래에 붙여넣습니다. export 명령어가 수행되면서 JAVA_HOME은 /u01/app/java/jdk1.7.0_60 위치라는것을 명시하게 되는 것입니다. 

[scott@centos ~]$ vi .bashrc
===============================================================
export JAVA_HOME=/u01/app/java/jdk1.7.0_60
export PATH=/u01/app/java/jdk1.7.0_60/bin:$PATH
export CLASSPATH=.:/usr/java/jdk1.7.0_60/lib:$CLASSPATH
===============================================================

설명:  위에서 복사해서 붙여넣었으면 설정한 내용을 리눅스 서버에 반영을 해야합니다. 카카오톡 환경설정에서도 설정을 변경했으면 반영을 할때 apply 같은 버튼을 누르듯이 리눅스에서 반영을 하려면 .bashrc 파일을 실행을 하면되는데 실행하는 명령어가 아래와 같이 점(.) 을 쓰고 한칸 떼고 .bashrc 하면 됩니다.

[scott@centos ~]$ . .bashrc

[scott@centos ~]$ java -version
java version "1.7.0_60"
Java(TM) SE Runtime Environment (build 1.7.0_60-b19)
Java HotSpot(TM) Server VM (build 24.60-b09, mixed mode)

8.  protobuf 를 설치 합니다. 

설명:  protobuf 를 설치를 해야하는 이유는 하둡을  사용하려면  여러대의 컴퓨터가 서로 접속을 자유롭게하면서 패스워드를 물어보지 않고 그냥 자유롭게 서로 접속을 할 수 있어야합니다.  이 프로그램은 구글에서 만들었고 이 프로그램 설치를 해야 서버끼리 자유롭게 접속할 수 있는 상태가 됩니다. 
                                                
다시 root 로 접속합니다. 
[scott@centos ~]$ su -
Password:
[root@centos ~]# cp -v /home/scott/protobuf-2.5.0.tar.gz  /usr/local
[root@centos ~]# cd /usr/local
[root@centos local]# ll

[root@centos local]# tar xvfz protobuf-2.5.0.tar.gz 
[root@centos local]# cd protobuf-2.5.0

[root@centos protobuf-2.5.0]# ./configure

[root@centos protobuf-2.5.0]# make

[root@centos protobuf-2.5.0]# make install

[root@centos protobuf-2.5.0]# protoc --version 
libprotoc 2.5.0

다시 reboot 합니다. 

[root@centos protobuf-2.5.0]# reboot 

9. keygen 생성 

하둡은 SSH 프로토컬을 이용해 하둡 클러스트간의 내부 통신을 수행한다.
                  ↓
컴퓨터가 네트웍으로 대화를 나눌때 쓰는 언어 

하둡을 다 설치하고 나서 하둡을 시작하는 명령어인 start-all.sh 쉘 스크립트를 수행하면  네임노드가 설치된 서버에서 데이터 노드가 설치된 서버로 접근해 데이터 노드와 테스크 트래커를 구동하게 된다. 
그런데 이때 ssh 를 이용할 수 없다면 하둡을 실행할 수 없다. 

 네임노드에서 공개키를 설정하고 이 공개키(authorized_keys) 를 다른 데이터 노드에 복사해줘야한다.

예: 우리반 30명 자리의 컴퓨터를 하둡으로 묶어버리고 싶다면 30명 자리의 패스워드를 모두  공개키(authorized_keys) 에 저장하고 모든 자리에 authorized_keys 배포해줘야합니다.

이 키를 가지고 있으면 ssh 로 다른 노드에 접속할때 패스워드 없이 접속할 수 있다.

## 공개키 생성 

설명: 숨김 디렉토리인 .ssh 디렉토리를 우리가 생성할텐데 혹시 있을지 몰라서 삭제를 먼저 합니다.

[scott@centos ~]$ rm -rf .ssh 

설명:  ssh-keygen 명령어를 이용해서 .ssh 디렉토리를 생성을 합니다. 

[scott@centos ~]$ ssh-keygen

Generating public/private rsa key pair.
Enter file in which to save the key (/home/scott/.ssh/id_rsa): <- enter key
Created directory '/home/scott/.ssh'.
Enter passphrase (empty for no passphrase): <- enter key
Enter same passphrase again: <- enter key
Your identification has been saved in /home/scott/.ssh/id_rsa.
Your public key has been saved in /home/scott/.ssh/id_rsa.pub.
The key fingerprint is:
b8:e5:55:fd:f9:72:4d:48:e6:47:22:bd:44:cb:41:7d scott@centos
The key's randomart image is:
+--[ RSA 2048]----+
|             .+. |
|             = oE|
|            o X o|
|       .   . * *.|
|      . S .   +.+|
|       + .     oo|
|      . .     . +|
|               o |
|                 |
+-----------------+

설명:  아래의 명령어로 scott 으로 192.168.56.101 서버에 접속을 시도합니다. 
즉, 내 리눅스 서버로 접속하면서 패스워드를 물어볼텐데 그때 패스워드를 입력을 하면 그 패스워드가 authorized key 에 담겨서 만들어지게 됩니다. 

[scott@centos ~]$ ssh-copy-id -i /home/scott/.ssh/id_rsa.pub scott@192.168.56.101


The authenticity of host '192.168.56.101 (192.168.56.101)' can't be established.
ECDSA key fingerprint is 6b:de:64:c5:27:c4:c6:d7:62:2a:9c:fa:83:d5:65:13.
Are you sure you want to continue connecting (yes/no)? yes <- 입력
/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys
scott@192.168.56.101's password: 1234 <- 패스워드입력

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh 'scott@192.168.56.101'"
and check to make sure that only the key(s) you wanted were added.

# 공개키 잘 생성되었는지 확인

[scott@centos ~]$ ssh scott@192.168.56.101
Last login: Thu Aug  6 22:17:11 2020

※ 중요: 여기서 접속시 패스워드를 물어보면 안됩니다.

10. hadoop 디렉토리를 만들고 거기에 하둡설치 파일 압축을 풉니다.
[scott@centos ~]$ cd 
[scott@centos ~]$ mkdir  hadoop
[scott@centos ~]$ cd hadoop

설명:  아래의 cp ../hadoop-1.2.1.tar.gz . 명령어는 현재 디렉토리의 바로 전 상위 디렉토리에 있는 hadoop-1.2.1.tar.gz 파일을 현재 디렉토리에 복사하시오.

[scott@centos hadoop]$ cp ../hadoop-1.2.1.tar.gz .
[scott@centos hadoop]$ tar xvzf hadoop-1.2.1.tar.gz
...
[scott@centos hadoop]$ rm hadoop-1.2.1.tar.gz

11. 하둡 홈 디렉토리를 설정한다.

설명: 리눅스의 환경설정파일인 .bashrc 파일의 vi 편집기로 열어서 맨아래에 HADOOP의 홈(집) 디렉토리가 어디다라고 지정을 해줘야 합니다. 

[scott@centos hadoop]$ cd
[scott@centos ~]$ vi .bashrc
=====================================================
export HADOOP_HOME=/home/scott/hadoop/hadoop-1.2.1
export PATH=$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$PATH
=====================================================
설명: PATH 는 리눅스에 설치되어져있는 소프트웨어가 어디에 설치 되었다 라고 등록하는 환경변수 

설명:  . .bashrc 명령어로  .bashrc 스크립트를 수행합니다. 
 (아래의 명령어는 적용버튼 누르는 명령어 입니다. )
 
[scott@centos ~]$ . .bashrc

192.168.56.1 은 putty 로 접속하기 위해서 사용한 아이피 주소
192.168.56.101은  노드끼리 서로 접속하기 위해서 사용해야 하는 아이피 


12. 하둡 환경설정을 하기 위해 아래의 4개의 파일을 셋팅해야한다.

	1)  hadoop-env.sh : 자바 홈디렉토리와 hadoop 홈디렉토리가 어딘지 지정한다.  하둡이 자바로 만들어졌기 때문에 자바가 어디에 설치 되어져 있는지 하둡이 알고 있어야하므로 자바 홈디렉토리를 hadoop-env.sh 파일에 지정합니다.
	2) core-site.xml : 하둡의 네임노드가 어느 서버인지를 지정한다. 하둡은 네임노드와 데이터 노드들로 구성이 되어져 있는데 네임노드에는 우리가 검색하고자하는 데이터의 위치정보인 메타정보가 들어있습니다. 
	3) mapred-site.xml : java 로 만들어진 mapreduce 프레임워크와 관련된 정보를 지정하는 파일 

하둡은 자바로 만들어진 큰 2개의 함수(mapping 함수와 reducing 함수)로 되어져 있습니다. 우리가 하둡에 있는 데이터를 검색을하면 이 2개의 함수가 작동을 하면서 데이터를 검색하고 결과를 보여줍니다. 

	4) hdfs-site.xml : 하둡 파일 시스템인 HDFS(Hadoop Distributed File System) 와 관련된 정보를 저장하는 파일 
	
여러대의 컴퓨터를 묶어서 하나의 강력한 슈퍼 컴퓨터로 사용하기 위해 반드시 필요한 하둡의 필수 셋팅 부분 

[scott@centos ~]$ cd $HADOOP_HOME/conf

설명: 4개의 파일을 수정만 하면되는데 첫번재로 자바의 홈디렉토리와 하둡의 홈디렉토리가 어디다라고 지정하기위해 hadoop-env.sh를 수정합니다.

[scott@centos conf]$ vi hadoop-env.sh
=====================================================
# The java implementation to use. Required.
# export JAVA_HOME=/usr/lib/j2sdk1.5-sun
export JAVA_HOME=/u01/app/java/jdk1.7.0_60
export HADOOP_HOME=/home/scott/hadoop/hadoop-1.2.1
export HADOOP_HOME_WARN_SUPPRESS=1
=====================================================

설명:  하둡을 구성하기 위한 두번째 파일인 core-site.xml 파일을 수정하는데 여기에는 네임노드에 대한 정보를 저장합니다.

[scott@centos conf]$ vi core-site.xml
=====================================================
<configuration>
  <property>
    <name>fs.default.name</name>
    <value>hdfs://localhost:9000</value>
  </property>
  <property>
    <name>hadoop.tmp.dir</name>
    <value>/home/scott/hadoop/hadoop-1.2.1/hadoop-${user.name}</value>
  </property>
</configuration>
=====================================================

설명:  하둡의 핵심 함수 2개인 mapping 함수와 reducing 함수에 대한 코드가있는 맵리듀싱 프레임워크에 대한 정보를 기제하는 mapred-site.xml 을 수정합니다.

[scott@centos conf]$ vi mapred-site.xml
=====================================================
<configuration>
  <property>
    <name>mapred.job.tracker</name>
    <value>localhost:9001</value>
  </property>
  <property>
    <name>mapred.local.dir</name>
    <value>${hadoop.tmp.dir}/mapred/local</value>
  </property>
  <property>
    <name>mapred.system.dir</name>
    <value>${hadoop.tmp.dir}/mapred/system</value>
  </property>
</configuration>
=====================================================

설명:  하둡은 크게 네임노드와 데이터 노드들로 구성되어 있는데 원래는 네임노드와 데이터 노드가 서로 다른 컴퓨터에 분리되어있어야하는데 우리는 컴퓨터가 하나이므로 네임노드와 데이터 노드를 같은 컴퓨터로 구성할 것입니다. 그래서 아래와 같이 네임노드의 데이터가 축적될 위치와 데이터 노드의 데이터가 축적될 위치를 로컬에 생성합니다.

[scott@centos conf]$ mkdir /home/scott/hadoop/hadoop-1.2.1/dfs
[scott@centos conf]$ mkdir /home/scott/hadoop/hadoop-1.2.1/dfs/name
[scott@centos conf]$ mkdir /home/scott/hadoop/hadoop-1.2.1/dfs/data

[scott@centos conf]$ vi hdfs-site.xml
=====================================================
<configuration>
  <property>
    <name>dfs.name.dir</name>
    <value>/home/scott/hadoop/hadoop-1.2.1/dfs/name</value>
  </property>
  <property>
    <name>dfs.name.edits.dir</name>
    <value>${dfs.name.dir}</value>
  </property>
  <property>
    <name>dfs.data.dir</name>
    <value>/home/scott/hadoop/hadoop-1.2.1/dfs/data</value>
  </property>
</configuration>
=====================================================

data 와 name 디렉토리의 권한을 조정합니다. 

[scott@centos dfs]$ cd /home/scott/hadoop/hadoop-1.2.1/dfs
[scott@centos dfs]$ chmod 755 data
[scott@centos dfs]$ chmod 755 name
[scott@centos dfs]$ ls -l
total 0
drwxr-xr-x. 2 scott scott 6 Jan  6 09:01 data
drwxr-xr-x. 2 scott scott 6 Jan  6 09:07 name

13. 하둡 네임노드를 포멧한다. 
[scott@centos conf]$ cd
[scott@centos ~]$ hadoop namenode -format

14/08/06 00:28:19 INFO namenode.NameNode: STARTUP_MSG:
/************************************************************
STARTUP_MSG: Starting NameNode
STARTUP_MSG: host = edydr1p2.us.oracle.com/192.168.100.102
STARTUP_MSG: args = [-format]
STARTUP_MSG: version = 1.2.1
STARTUP_MSG: build = https://svn.apache.org/repos/asf/hadoop/common/branches/branch-1.2 -r 1503152; compiled by 'mattf' on Mon Jul 22 15:23:09 PDT 2013
STARTUP_MSG: java = 1.7.0_60
************************************************************/
Re-format filesystem in /u01/app/hadoop/hadoop-1.2.1/dfs/name ? (Y or N) Y (대문자)
...
14/08/06 00:28:28 INFO namenode.FSEditLog: closing edit log: position=4, editlog=/u01/app/hadoop/hadoop-1.2.1/dfs/name/current/edits
14/08/06 00:28:28 INFO namenode.FSEditLog: close success: truncate to 4, editlog=/u01/app/hadoop/hadoop-1.2.1/dfs/name/current/edits
14/08/06 00:28:28 INFO common.Storage: Storage directory /u01/app/hadoop/hadoop-1.2.1/dfs/name has been successfully formatted.
14/08/06 00:28:28 INFO namenode.NameNode: SHUTDOWN_MSG:
/************************************************************
SHUTDOWN_MSG: Shutting down NameNode at edydr1p2.us.oracle.com/192.168.100.102
************************************************************/

14. 하둡파일 시스템을 올린다.
[scott@centos ~]$ start-all.sh


15. 하둡파일 시스템의 데몬이 잘 올라왔는지 확인한다.
[scott@centos ~]$ jps
9167 SecondaryNameNode
9030 DataNode
9402 TaskTracker
9250 JobTracker
9494 Jps
8883 NameNode

16. 잘 안되었을 때의 조치 방법
	1) 하둡을 모두 내립니다. 
[scott@centos conf]$ stop-all.sh

	2) 디렉토리 권한을 조정합니다.
(base) [scott@centos dfs]$cd /home/scott/hadoop/hadoop-1.2.1/dfs
(base) [scott@centos dfs]$ ls -l
total 0
drwxr-xr-x. 6 scott scott 106 Jan  5 12:39 data
drwxr-xr-x. 5 scott scott  80 Jan  5 12:39 name

	3) 하둡 네임노드를 포멧한다. 
[scott@centos conf]$ cd
[scott@centos ~]$ hadoop namenode -format

	4)  하둡 데이터 노드와 네임노드의 데이터를 다 지웁니다. 
(base) [scott@centos dfs]$  cd /home/scott/hadoop/hadoop-1.2.1/dfs
[scott@centos dfs]$ pwd
/home/scott/hadoop/hadoop-1.2.1/dfs
[scott@centos dfs]$ ls
data  name
[scott@centos dfs]$ cd data
[scott@centos data]$ rm -rf *
[scott@centos data]$ cd ../name
[scott@centos name]$ rm -rf *
[scott@centos name]$ start-all.sh


